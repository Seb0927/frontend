{
  "version": 3,
  "sources": ["../../@material-ui/core/esm/Container/Container.js"],
  "sourcesContent": ["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);"],
  "mappings": "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",
  "names": ["styles", "Container", "PropTypes"]
}

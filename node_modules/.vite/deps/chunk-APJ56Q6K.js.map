{
  "version": 3,
  "sources": ["../../@material-ui/core/esm/Portal/Portal.js", "../../@material-ui/core/esm/transitions/utils.js"],
  "sourcesContent": ["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { exactProp, HTMLElementType } from '@material-ui/utils';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport setRef from '../utils/setRef';\nimport useForkRef from '../utils/useForkRef';\n\nfunction getContainer(container) {\n  container = typeof container === 'function' ? container() : container; // #StrictMode ready\n\n  return ReactDOM.findDOMNode(container);\n}\n\nvar useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n/**\n * Portals provide a first-class way to render children into a DOM node\n * that exists outside the DOM hierarchy of the parent component.\n */\n\nvar Portal = /*#__PURE__*/React.forwardRef(function Portal(props, ref) {\n  var children = props.children,\n      container = props.container,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n      onRendered = props.onRendered;\n\n  var _React$useState = React.useState(null),\n      mountNode = _React$useState[0],\n      setMountNode = _React$useState[1];\n\n  var handleRef = useForkRef( /*#__PURE__*/React.isValidElement(children) ? children.ref : null, ref);\n  useEnhancedEffect(function () {\n    if (!disablePortal) {\n      setMountNode(getContainer(container) || document.body);\n    }\n  }, [container, disablePortal]);\n  useEnhancedEffect(function () {\n    if (mountNode && !disablePortal) {\n      setRef(ref, mountNode);\n      return function () {\n        setRef(ref, null);\n      };\n    }\n\n    return undefined;\n  }, [ref, mountNode, disablePortal]);\n  useEnhancedEffect(function () {\n    if (onRendered && (mountNode || disablePortal)) {\n      onRendered();\n    }\n  }, [onRendered, mountNode, disablePortal]);\n\n  if (disablePortal) {\n    if ( /*#__PURE__*/React.isValidElement(children)) {\n      return /*#__PURE__*/React.cloneElement(children, {\n        ref: handleRef\n      });\n    }\n\n    return children;\n  }\n\n  return mountNode ? /*#__PURE__*/ReactDOM.createPortal(children, mountNode) : mountNode;\n});\nprocess.env.NODE_ENV !== \"production\" ? Portal.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The children to render into the `container`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A HTML element, component instance, or function that returns either.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.instanceOf(React.Component), PropTypes.func]),\n\n  /**\n   * Disable the portal behavior.\n   * The children stay within it's parent DOM hierarchy.\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * Callback fired once the children has been mounted into the `container`.\n   *\n   * This prop will be removed in v5, the ref can be used instead.\n   * @deprecated Use the ref instead.\n   */\n  onRendered: deprecatedPropType(PropTypes.func, 'Use the ref instead.')\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  Portal['propTypes' + ''] = exactProp(Portal.propTypes);\n}\n\nexport default Portal;", "export var reflow = function reflow(node) {\n  return node.scrollTop;\n};\nexport function getTransitionProps(props, options) {\n  var timeout = props.timeout,\n      _props$style = props.style,\n      style = _props$style === void 0 ? {} : _props$style;\n  return {\n    duration: style.transitionDuration || typeof timeout === 'number' ? timeout : timeout[options.mode] || 0,\n    delay: style.transitionDelay\n  };\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,YAAuB;AACvB,eAA0B;AAC1B,wBAAsB;AACtB;AACA;AACA;AACA;AAEA,SAAS,aAAa,WAAW;AAC/B,cAAY,OAAO,cAAc,aAAa,UAAU,IAAI;AAE5D,SAAgB,qBAAY,SAAS;AACvC;AAEA,IAAI,oBAAoB,OAAO,WAAW,cAAoB,wBAAwB;AAMtF,IAAI,SAA4B,iBAAW,SAASA,QAAO,OAAO,KAAK;AACrE,MAAI,WAAW,MAAM,UACjB,YAAY,MAAM,WAClB,uBAAuB,MAAM,eAC7B,gBAAgB,yBAAyB,SAAS,QAAQ,sBAC1D,aAAa,MAAM;AAEvB,MAAI,kBAAwB,eAAS,IAAI,GACrC,YAAY,gBAAgB,CAAC,GAC7B,eAAe,gBAAgB,CAAC;AAEpC,MAAI,YAAY,WAA+B,qBAAe,QAAQ,IAAI,SAAS,MAAM,MAAM,GAAG;AAClG,oBAAkB,WAAY;AAC5B,QAAI,CAAC,eAAe;AAClB,mBAAa,aAAa,SAAS,KAAK,SAAS,IAAI;AAAA,IACvD;AAAA,EACF,GAAG,CAAC,WAAW,aAAa,CAAC;AAC7B,oBAAkB,WAAY;AAC5B,QAAI,aAAa,CAAC,eAAe;AAC/B,aAAO,KAAK,SAAS;AACrB,aAAO,WAAY;AACjB,eAAO,KAAK,IAAI;AAAA,MAClB;AAAA,IACF;AAEA,WAAO;AAAA,EACT,GAAG,CAAC,KAAK,WAAW,aAAa,CAAC;AAClC,oBAAkB,WAAY;AAC5B,QAAI,eAAe,aAAa,gBAAgB;AAC9C,iBAAW;AAAA,IACb;AAAA,EACF,GAAG,CAAC,YAAY,WAAW,aAAa,CAAC;AAEzC,MAAI,eAAe;AACjB,QAAwB,qBAAe,QAAQ,GAAG;AAChD,aAA0B,mBAAa,UAAU;AAAA,QAC/C,KAAK;AAAA,MACP,CAAC;AAAA,IACH;AAEA,WAAO;AAAA,EACT;AAEA,SAAO,YAAkC,sBAAa,UAAU,SAAS,IAAI;AAC/E,CAAC;AACD,OAAwC,OAAO,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASzD,UAAU,kBAAAC,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASpB,WAAW,kBAAAA,QAEV,UAAU,CAAC,iBAAiB,kBAAAA,QAAU,WAAiB,eAAS,GAAG,kBAAAA,QAAU,IAAI,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,EAMnF,eAAe,kBAAAA,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQzB,YAAY,mBAAmB,kBAAAA,QAAU,MAAM,sBAAsB;AACvE,IAAI;AAEJ,IAAI,MAAuC;AAEzC,SAAO,WAAgB,IAAI,UAAU,OAAO,SAAS;AACvD;AAEA,IAAO,iBAAQ;;;AC3GR,IAAI,SAAS,SAASC,QAAO,MAAM;AACxC,SAAO,KAAK;AACd;AACO,SAAS,mBAAmB,OAAO,SAAS;AACjD,MAAI,UAAU,MAAM,SAChB,eAAe,MAAM,OACrB,QAAQ,iBAAiB,SAAS,CAAC,IAAI;AAC3C,SAAO;AAAA,IACL,UAAU,MAAM,sBAAsB,OAAO,YAAY,WAAW,UAAU,QAAQ,QAAQ,IAAI,KAAK;AAAA,IACvG,OAAO,MAAM;AAAA,EACf;AACF;",
  "names": ["Portal", "PropTypes", "reflow"]
}
